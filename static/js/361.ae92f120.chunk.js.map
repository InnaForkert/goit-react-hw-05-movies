{"version":3,"file":"static/js/361.ae92f120.chunk.js","mappings":"qLAEaA,E,OAAYC,GAAAA,EAAQ,4P,6HCA3BC,EAAU,mCAOf,8CALM,WAA4BC,GAAU,8EAEuB,OAD5DC,EAAG,iDAC4BD,EAAE,4BAAoBD,EAAO,mCAC/CG,EAAAA,EAAAA,IAAUD,GAAK,KAAD,EAAvB,OAAJE,EAAI,yBACHA,EAAKA,KAAKC,SAAO,4CACzB,sB,4BCPYC,EAASP,EAAAA,GAAAA,EAAQ,mEAKjBQ,EAAQR,EAAAA,GAAAA,WAAiB,wFAMzBS,EAAaT,EAAAA,GAAAA,IAAU,gP,SCV7B,SAASU,EAAO,GAAsD,IAAD,IAAnDL,KAAQM,EAAM,EAANA,OAAQC,EAAO,EAAPA,QACvC,OACE,UAACH,EAAU,YACT,SAACF,EAAM,UAAEI,KACT,SAACH,EAAK,UAAEI,MAGd,C,aCHe,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAQ1B,OANAC,EAAAA,EAAAA,YAAU,WACJL,GHRD,SAA4B,GAAD,+BGS5BM,CAAaN,GAASO,KAAKH,EAE/B,GAAG,CAACJ,KAGF,8BACGG,EAAQK,OAAS,EAChBL,EAAQM,KAAI,SAACC,GAAc,OAAK,SAACd,EAAM,CAACL,KAAMmB,GAASA,EAAGtB,GAAM,KAEhE,SAAC,IAAS,UAAC,mCAInB,C","sources":["pages/Reviews/Reviews.styled.tsx","util/fetchReviews.ts","components/Review/Review.styled.tsx","components/Review/Review.tsx","pages/Reviews/Reviews.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const NoReviews = styled.p`\n  position: relative;\n  z-index: 2;\n  margin-left: auto;\n  margin-right: 10%;\n  margin-top: 5%;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 30px;\n  background-color: #000000a4;\n  color: white;\n  width: 270px;\n`;\n","import axios from \"axios\";\n\nconst API_KEY = \"8522ceac590a3d887052607dd409b490\";\n\nexport async function fetchReviews(id: string) {\n  const URL = `\n  https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const data = await axios.get(URL);\n  return data.data.results;\n}\n","import styled from \"styled-components\";\n\nexport const Author = styled.p`\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\n\nexport const Quote = styled.blockquote`\n  font-style: italic;\n  font-size: 14px;\n  line-height: 1.2;\n`;\n\nexport const ReviewText = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n  margin-left: 50%;\n  margin-top: 10px;\n  padding: 20px;\n  border-radius: 10px;\n  background-color: #000000a4;\n  color: white;\n`;\n","import { ReviewType } from \"../../interfaces/review\";\nimport { Author, Quote, ReviewText } from \"./Review.styled\";\n\nexport function Review({ data: { author, content } }: { data: ReviewType }) {\n  return (\n    <ReviewText>\n      <Author>{author}</Author>\n      <Quote>{content}</Quote>\n    </ReviewText>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchReviews } from \"../../util/fetchReviews\";\nimport { Review } from \"../../components/Review/Review\";\nimport { ReviewType } from \"../../interfaces/review\";\nimport { NoReviews } from \"./Reviews.styled\";\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (movieId) {\n      fetchReviews(movieId).then(setReviews);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        reviews.map((el: ReviewType) => <Review data={el} key={el.id} />)\n      ) : (\n        <NoReviews>No reviews found ðŸ™„</NoReviews>\n      )}\n    </>\n  );\n}\n"],"names":["NoReviews","styled","API_KEY","id","URL","axios","data","results","Author","Quote","ReviewText","Review","author","content","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","then","length","map","el"],"sourceRoot":""}