{"version":3,"file":"static/js/537.3e67f2ca.chunk.js","mappings":"0MAGaA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAY,2ZAoB9BE,EAAaF,EAAAA,GAAAA,EAAQ,mE,kBCnB3B,SAASG,EAAU,GAItB,IAAD,IAHDC,MAASC,EAAc,EAAdA,eAAgBC,EAAW,EAAXA,YAAaC,EAAE,EAAFA,GAI9BC,GAAaC,EAAAA,EAAAA,MAAbD,SAER,OAAKF,GAKH,UAACP,EAAe,CACdW,GAAiB,MAAbF,EAAgB,kBAAcD,GAAE,UAAQA,GAC5CI,MAAO,CAAEC,KAAM,MAAO,WAEtB,gBACEC,IAAG,0CAAqCP,GACxCQ,IAAKT,KAEP,SAACH,EAAU,UAAEG,OAZR,IAeX,CCzBO,IAAMU,EAAef,EAAAA,GAAAA,IAAU,gICE/B,SAASgB,EAAO,GAAwC,IAAtCC,EAAS,EAATA,UACvB,OACE,SAACF,EAAY,UACVE,EAAUC,KAAI,SAACC,GAAS,OACvB,SAAChB,EAAS,CAACC,MAAOe,GAASA,EAAGZ,GAAM,KAI5C,C,qECVaa,E,OAAUpB,GAAAA,GAAS,0F,6GCAnBqB,E,OAAcrB,GAAAA,MAAY,0H,SCAhC,SAASsB,EAAY,GAMxB,IALFC,EAAQ,EAARA,SACAC,EAAK,EAALA,MAKA,OACE,SAACH,EAAW,CACVI,KAAK,OACLF,SAAU,SAACG,GAAC,OAAKH,EAASG,EAAE,EAC5BC,YAAY,cACZH,MAAOA,GAGb,C,+BChBMI,EAAU,mCAMf,8CAJM,WAA4BC,GAAa,8EACwD,OAAhGC,EAAG,4DAAwDF,EAAO,iCAAyBC,EAAK,wCACnFE,EAAAA,EAAAA,IAAUD,GAAK,KAAD,EAAvB,OAAJE,EAAI,yBACHA,EAAKA,KAAKC,SAAO,4CACzB,sB,qBCAc,SAASC,IAAc,IAAD,EACnC,GAA0CC,EAAAA,EAAAA,UAAS,IAAG,eAA/CC,EAAa,KAAEC,EAAgB,KACtC,GAAsCF,EAAAA,EAAAA,UAAS,IAAG,eAA3CG,EAAW,KAAEC,EAAc,KAClC,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAC9BC,EAAmC,QAA7B,EAAGF,EAAaG,IAAI,iBAAS,QAAI,GAiB7C,OAfAC,EAAAA,EAAAA,YAAU,WACJF,GDXD,SAA4B,GAAD,+BCY5BG,CAAaH,GAAQI,KAAKV,GAC1BW,YAAW,kBAAMT,EAAe,uCAA6B,GAAE,OAE/DF,EAAiB,IACjBE,EAAe,gCAEnB,GAAG,CAACI,KAQF,iCACE,SAACrB,EAAW,CAACC,SAPjB,SAAqBG,GACnB,IAAMuB,EAASvB,EAAEuB,OACjBP,EAAgBO,EAAOzB,MAAQ,CAAEmB,OAAQM,EAAOzB,OAAU,CAAC,EAC7D,EAIwCA,MAAOmB,IAC1CP,EAAcc,OAAS,GACtB,SAAClC,EAAA,EAAM,CAACC,UAAWmB,KAEnB,SAAC,IAAO,UAAEE,MAIlB,C","sources":["components/MovieCard/MovieCard.styled.tsx","components/MovieCard/MovieCard.tsx","components/Movies/Movies.styled.tsx","components/Movies/Movies.tsx","pages/Home/Home.styled.tsx","components/SearchField/SearchField.styled.tsx","components/SearchField/SearchField.tsx","util/searchMovies.ts","pages/SearchPage/SearchPage.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const MovieCardStyled = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 20%;\r\n  cursor: pointer;\r\n  transition-property: transform, box-shadow;\r\n  transition-duration: 250ms;\r\n  padding-bottom: 10px;\r\n  background-color: black;\r\n  color: white;\r\n  text-decoration: none;\r\n\r\n  :hover,\r\n  :focus {\r\n    transform: scale(1.05);\r\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\r\n  }\r\n`;\r\n\r\nexport const MovieTitle = styled.p`\r\n  text-align: center;\r\n  font-size: 16px;\r\n`;\r\n","import { MovieCardStyled, MovieTitle } from \"./MovieCard.styled\";\r\nimport { Movie } from \"../../interfaces/movie\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nexport function MovieCard({\r\n  movie: { original_title, poster_path, id },\r\n}: {\r\n  movie: Movie;\r\n}) {\r\n  const { pathname } = useLocation();\r\n\r\n  if (!poster_path) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <MovieCardStyled\r\n      to={pathname === \"/\" ? `/movies/${id}` : `${id}`}\r\n      state={{ test: \"hi\" }}\r\n    >\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\r\n        alt={original_title}\r\n      />\r\n      <MovieTitle>{original_title}</MovieTitle>\r\n    </MovieCardStyled>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const MovieLibrary = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  margin-bottom: 40px;\r\n`;\r\n","import { Movie } from \"../../interfaces/movie\";\r\nimport { MovieCard } from \"../MovieCard/MovieCard\";\r\nimport { MovieLibrary } from \"./Movies.styled\";\r\n\r\nexport function Movies({ movieList }: { movieList: Movie[] }) {\r\n  return (\r\n    <MovieLibrary>\r\n      {movieList.map((el: Movie) => (\r\n        <MovieCard movie={el} key={el.id} />\r\n      ))}\r\n    </MovieLibrary>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Heading = styled.h1`\r\n  font-size: 40px;\r\n  text-align: center;\r\n  margin-bottom: 25px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  width: 50%;\r\n  margin: 20px auto;\r\n  padding: 10px;\r\n  border-radius: 15px;\r\n`;\r\n","import { SearchInput } from \"./SearchField.styled\";\r\n\r\nexport function SearchField({\r\n  onChange,\r\n  value,\r\n}: {\r\n  onChange: (e: React.ChangeEvent) => void;\r\n  value: string;\r\n}) {\r\n  return (\r\n    <SearchInput\r\n      type=\"text\"\r\n      onChange={(e) => onChange(e)}\r\n      placeholder=\"Find a film\"\r\n      value={value}\r\n    />\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst API_KEY = \"8522ceac590a3d887052607dd409b490\";\r\n\r\nexport async function searchMovies(query: string) {\r\n  const URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\r\n  const data = await axios.get(URL);\r\n  return data.data.results;\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Movies } from \"../../components/Movies/Movies\";\r\nimport { SearchField } from \"../../components/SearchField/SearchField\";\r\nimport { searchMovies } from \"../../util/searchMovies\";\r\nimport { Heading } from \"../Home/Home.styled\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nexport default function SearchPage() {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [headingText, setHeadingText] = useState(\"\");\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const filter = searchParams.get(\"filter\") ?? \"\";\r\n\r\n  useEffect(() => {\r\n    if (filter) {\r\n      searchMovies(filter).then(setSearchResults);\r\n      setTimeout(() => setHeadingText(\"Nothing found, try againðŸ¤”\"), 100);\r\n    } else {\r\n      setSearchResults([]);\r\n      setHeadingText(\"Nothing here yetðŸ˜¥\");\r\n    }\r\n  }, [filter]);\r\n\r\n  function acceptInput(e: React.ChangeEvent) {\r\n    const target = e.target as HTMLInputElement;\r\n    setSearchParams(target.value ? { filter: target.value } : {});\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SearchField onChange={acceptInput} value={filter} />\r\n      {searchResults.length > 0 ? (\r\n        <Movies movieList={searchResults} />\r\n      ) : (\r\n        <Heading>{headingText}</Heading>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["MovieCardStyled","styled","Link","MovieTitle","MovieCard","movie","original_title","poster_path","id","pathname","useLocation","to","state","test","src","alt","MovieLibrary","Movies","movieList","map","el","Heading","SearchInput","SearchField","onChange","value","type","e","placeholder","API_KEY","query","URL","axios","data","results","SearchPage","useState","searchResults","setSearchResults","headingText","setHeadingText","useSearchParams","searchParams","setSearchParams","filter","get","useEffect","searchMovies","then","setTimeout","target","length"],"sourceRoot":""}