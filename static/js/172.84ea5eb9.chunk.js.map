{"version":3,"file":"static/js/172.84ea5eb9.chunk.js","mappings":"oOAEMA,EAAU,mCAOf,8CALM,WAAyBC,GAAU,8EAE0B,OAD5DC,EAAG,iDAC4BD,EAAE,4BAAoBD,EAAO,4BAC/CG,EAAAA,EAAAA,IAAUD,GAAK,KAAD,EAAvB,OAAJE,EAAI,yBACHA,EAAKA,KAAKC,MAAI,4CACtB,sB,gDCPYC,EAAaC,EAAAA,GAAAA,IAAU,gDAIvBC,EAAYD,EAAAA,GAAAA,EAAQ,wFAMpBE,EAAeF,EAAAA,GAAAA,IAAU,0O,SCT/B,SAASG,EAAM,GAAuD,IAAD,IAApDN,KAAQO,EAAI,EAAJA,KAAMC,EAAY,EAAZA,aACpC,OAAKA,GAKH,UAACH,EAAY,YACX,SAACH,EAAU,CACTO,IAAG,0CAAqCD,GACxCE,IAAKH,KAEP,SAACH,EAAS,UAAEG,OATP,IAYX,CCfO,IAAMI,EAAaR,EAAAA,GAAAA,IAAU,+FCMrB,SAASS,IACtB,IACWf,GACPgB,EAAAA,EAAAA,MADFC,MAASjB,GAEX,GAAwBkB,EAAAA,EAAAA,UAAS,IAAG,eAA7Bd,EAAI,KAAEe,EAAO,KAKpB,OAHAC,EAAAA,EAAAA,YAAU,YJVL,SAAyB,GAAD,gCIW3BC,CAAUrB,GAAIsB,KAAKH,EACrB,GAAG,CAACnB,KAEF,SAACc,EAAU,UACRV,EAAKmB,OAAS,EACbnB,EAAKoB,KAAI,SAACC,GAAY,OAAK,SAAChB,EAAK,CAACN,KAAMsB,GAASA,EAAGzB,GAAM,KAE1D,SAAC,IAAS,UAAC,2CAInB,C,qECxBa0B,E,OAAYpB,GAAAA,EAAQ,4P","sources":["util/fetchCast.ts","components/Actor/Actor.styled.tsx","components/Actor/Actor.tsx","pages/Cast/Cast.styled.tsx","pages/Cast/Cast.tsx","pages/Reviews/Reviews.styled.tsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"8522ceac590a3d887052607dd409b490\";\n\nexport async function fetchCast(id: string) {\n  const URL = `\n  https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n  const data = await axios.get(URL);\n  return data.data.cast;\n}\n","import styled from \"styled-components\";\n\nexport const ActorPhoto = styled.img`\n  border-radius: 10px;\n`;\n\nexport const ActorName = styled.p`\n  margin-top: 10px;\n  font-size: 20px;\n  text-align: center;\n`;\n\nexport const ActorProfile = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n  width: 36%;\n  margin-top: 10px;\n  padding: 15px;\n  border-radius: 10px;\n  background-color: #000000a4;\n  color: white;\n`;\n","import { CastType } from \"../../interfaces/cast\";\nimport { ActorPhoto, ActorName, ActorProfile } from \"./Actor.styled\";\n\nexport function Actor({ data: { name, profile_path } }: { data: CastType }) {\n  if (!profile_path) {\n    return null;\n  }\n\n  return (\n    <ActorProfile>\n      <ActorPhoto\n        src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n        alt={name}\n      />\n      <ActorName>{name}</ActorName>\n    </ActorProfile>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const CastStyled = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 50%;\n  gap: 1%;\n`;\n","import { useEffect, useState } from \"react\";\nimport { fetchCast } from \"../../util/fetchCast\";\nimport { useLocation } from \"react-router-dom\";\nimport { NoReviews } from \"../Reviews/Reviews.styled\";\nimport { CastType } from \"../../interfaces/cast\";\nimport { Actor } from \"../../components/Actor/Actor\";\nimport { CastStyled } from \"./Cast.styled\";\n\nexport default function Cast() {\n  const {\n    state: { id },\n  } = useLocation();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCast(id).then(setCast);\n  }, [id]);\n  return (\n    <CastStyled>\n      {cast.length > 0 ? (\n        cast.map((el: CastType) => <Actor data={el} key={el.id} />)\n      ) : (\n        <NoReviews>ERROR 404 Cast not found ðŸ‘½</NoReviews>\n      )}\n    </CastStyled>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const NoReviews = styled.p`\n  position: relative;\n  z-index: 2;\n  margin-left: auto;\n  margin-right: 10%;\n  margin-top: 5%;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 30px;\n  background-color: #000000a4;\n  color: white;\n  width: 270px;\n`;\n"],"names":["API_KEY","id","URL","axios","data","cast","ActorPhoto","styled","ActorName","ActorProfile","Actor","name","profile_path","src","alt","CastStyled","Cast","useLocation","state","useState","setCast","useEffect","fetchCast","then","length","map","el","NoReviews"],"sourceRoot":""}