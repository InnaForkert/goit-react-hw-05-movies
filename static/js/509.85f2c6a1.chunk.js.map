{"version":3,"file":"static/js/509.85f2c6a1.chunk.js","mappings":"0MAGaA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAY,2ZAoB9BE,EAAaF,EAAAA,GAAAA,EAAQ,mE,kBCnB3B,SAASG,EAAU,GAItB,IAAD,IAHDC,MAASC,EAAc,EAAdA,eAAgBC,EAAW,EAAXA,YAAaC,EAAE,EAAFA,GAI9BC,GAAaC,EAAAA,EAAAA,MAAbD,SAER,OAAKF,GAKH,UAACP,EAAe,CACdW,GAAiB,MAAbF,EAAgB,kBAAcD,GAAE,UAAQA,GAC5CI,MAAO,CAAEC,KAAM,MAAO,WAEtB,gBACEC,IAAG,0CAAqCP,GACxCQ,IAAKT,KAEP,SAACH,EAAU,UAAEG,OAZR,IAeX,CCzBO,IAAMU,EAAef,EAAAA,GAAAA,IAAU,gICE/B,SAASgB,EAAO,GAAwC,IAAtCC,EAAS,EAATA,UACvB,OACE,SAACF,EAAY,UACVE,EAAUC,KAAI,SAACC,GAAS,OACvB,SAAChB,EAAS,CAACC,MAAOe,GAASA,EAAGZ,GAAM,KAI5C,C,qECVaa,E,OAAUpB,GAAAA,GAAS,0F,6HCC1BqB,EAAG,qEADO,oCAOf,8CAHM,yGACcC,EAAAA,EAAAA,IAAUD,GAAK,KAAD,EAAvB,OAAJE,EAAI,yBACHA,EAAKA,KAAKC,SAAO,4CACzB,sB,sBCJc,SAASC,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAK5B,OAHAC,EAAAA,EAAAA,YAAU,YDFL,WAA4B,gCCG/BC,GAAgBC,KAAKH,EACvB,GAAG,KAED,iCACE,SAAC,IAAO,UAAC,+BACT,SAACZ,EAAA,EAAM,CAACC,UAAWU,MAGzB,C","sources":["components/MovieCard/MovieCard.styled.tsx","components/MovieCard/MovieCard.tsx","components/Movies/Movies.styled.tsx","components/Movies/Movies.tsx","pages/Home/Home.styled.tsx","util/fetchTrending.ts","pages/Home/Home.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const MovieCardStyled = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 20%;\r\n  cursor: pointer;\r\n  transition-property: transform, box-shadow;\r\n  transition-duration: 250ms;\r\n  padding-bottom: 10px;\r\n  background-color: black;\r\n  color: white;\r\n  text-decoration: none;\r\n\r\n  :hover,\r\n  :focus {\r\n    transform: scale(1.05);\r\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\r\n  }\r\n`;\r\n\r\nexport const MovieTitle = styled.p`\r\n  text-align: center;\r\n  font-size: 16px;\r\n`;\r\n","import { MovieCardStyled, MovieTitle } from \"./MovieCard.styled\";\r\nimport { Movie } from \"../../interfaces/movie\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nexport function MovieCard({\r\n  movie: { original_title, poster_path, id },\r\n}: {\r\n  movie: Movie;\r\n}) {\r\n  const { pathname } = useLocation();\r\n\r\n  if (!poster_path) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <MovieCardStyled\r\n      to={pathname === \"/\" ? `/movies/${id}` : `${id}`}\r\n      state={{ test: \"hi\" }}\r\n    >\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\r\n        alt={original_title}\r\n      />\r\n      <MovieTitle>{original_title}</MovieTitle>\r\n    </MovieCardStyled>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const MovieLibrary = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  margin-bottom: 40px;\r\n`;\r\n","import { Movie } from \"../../interfaces/movie\";\r\nimport { MovieCard } from \"../MovieCard/MovieCard\";\r\nimport { MovieLibrary } from \"./Movies.styled\";\r\n\r\nexport function Movies({ movieList }: { movieList: Movie[] }) {\r\n  return (\r\n    <MovieLibrary>\r\n      {movieList.map((el: Movie) => (\r\n        <MovieCard movie={el} key={el.id} />\r\n      ))}\r\n    </MovieLibrary>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Heading = styled.h1`\r\n  font-size: 40px;\r\n  text-align: center;\r\n  margin-bottom: 25px;\r\n`;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"8522ceac590a3d887052607dd409b490\";\r\nconst URL = `\r\nhttps://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\r\n\r\nexport async function fetchTrending() {\r\n  const data = await axios.get(URL);\r\n  return data.data.results;\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Movies } from \"../../components/Movies/Movies\";\r\nimport { fetchTrending } from \"../../util/fetchTrending\";\r\nimport { Heading } from \"./Home.styled\";\r\n\r\nexport default function Home() {\r\n  const [trending, setTrending] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchTrending().then(setTrending);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Heading>Trending Movies This Week</Heading>\r\n      <Movies movieList={trending} />\r\n    </>\r\n  );\r\n}\r\n"],"names":["MovieCardStyled","styled","Link","MovieTitle","MovieCard","movie","original_title","poster_path","id","pathname","useLocation","to","state","test","src","alt","MovieLibrary","Movies","movieList","map","el","Heading","URL","axios","data","results","Home","useState","trending","setTrending","useEffect","fetchTrending","then"],"sourceRoot":""}