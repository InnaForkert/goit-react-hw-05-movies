{"version":3,"file":"static/js/0.1504aacb.chunk.js","mappings":"mLAEaA,E,OAAUC,GAAAA,GAAS,0F,kHCA1BC,EAAU,mCAOf,8CALM,WAA4BC,GAAU,8EAEe,OADpDC,EAAG,iDAC4BD,EAAE,oBAAYD,EAAO,4BACvCG,EAAAA,EAAAA,IAAUD,GAAK,KAAD,EAAvB,OAAJE,EAAI,yBACHA,EAAKA,MAAI,4CACjB,sB,+CCNYC,EAAcN,EAAAA,GAAAA,IAAU,4EAMxBO,EAAYP,EAAAA,GAAAA,IAAU,mLAWtBQ,GAASR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAe,4Z,IAoBTA,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAc,oL,iBCjC3B,SAASW,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAa,eAA9CC,EAAO,KAAEC,EAAU,KACTZ,GAAOa,EAAAA,EAAAA,MAAhBC,QAQR,IANAC,EAAAA,EAAAA,YAAU,WACJf,GFRD,SAA4B,GAAD,+BES5BgB,CAAahB,GAAIiB,KAAKL,EAE1B,GAAG,CAACZ,KAECW,EAAQO,cACX,OAAO,wBAAI,sDAEb,IACEA,EAQEP,EARFO,cACAC,EAOER,EAPFQ,eACAC,EAMET,EANFS,QACAC,EAKEV,EALFU,OACAC,EAIEX,EAJFW,OACAC,EAGEZ,EAHFY,SACAC,EAEEb,EAFFa,aACAC,EACEd,EADFc,aAEEC,EAAe,sBAInB,OAHIJ,IACFI,EAAeJ,EAAOK,KAAI,SAACC,GAAE,OAAKA,EAAGC,IAAI,IAAEC,KAAK,QAGhD,iCACE,SAAC,IAAO,UAAEX,KACV,SAACf,EAAW,CACV2B,IAAG,0CAAqCb,GACxCc,IAAKb,KAEP,SAACf,EAAW,CACV2B,IAAG,8CAAyCb,GAC5Cc,IAAKb,KAEP,UAACd,EAAS,YACR,wBAAKe,KACL,uBAAIM,KACJ,yBAAG,aAAWL,MACd,yBAAG,aAAWG,MACd,yBAAG,iBAAeC,MAClB,uBAAIF,KACJ,SAACjB,EAAM,CAAC2B,GAAG,OAAOC,MAAO,CAAElC,GAAAA,GAAK,SAAC,UAGjC,SAACM,EAAM,CAAC2B,GAAG,UAAUC,MAAO,CAAElC,GAAAA,GAAK,SAAC,gBAItC,SAAC,EAAAmC,SAAQ,WACP,SAAC,KAAM,QAIf,C","sources":["pages/Home/Home.styled.tsx","util/fetchDetails.ts","pages/MovieDetails/MovieDetails.styled.tsx","pages/MovieDetails/MovieDetails.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Heading = styled.h1`\r\n  font-size: 40px;\r\n  text-align: center;\r\n  margin-bottom: 25px;\r\n`;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"8522ceac590a3d887052607dd409b490\";\r\n\r\nexport async function fetchDetails(id: string) {\r\n  const URL = `\r\n  https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\r\n  const data = await axios.get(URL);\r\n  return data.data;\r\n}\r\n","import { NavLink, Outlet } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const MoviePoster = styled.img`\r\n  position: absolute;\r\n  top: 20%;\r\n  width: 100%;\r\n`;\r\n\r\nexport const MovieInfo = styled.div`\r\n  position: absolute;\r\n  top: 25%;\r\n  left: 2%;\r\n  width: 40%;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  background-color: #000000a4;\r\n  color: white;\r\n`;\r\n\r\nexport const Button = styled(NavLink)`\r\n  display: inline-block;\r\n  padding: 8px 20px;\r\n  margin: 10px;\r\n  color: black;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  text-decoration: none;\r\n  transition-property: color, background-color;\r\n  transition-duration: 250ms;\r\n\r\n  :hover,\r\n  :focus,\r\n  &.active {\r\n    color: white;\r\n    background-color: black;\r\n    box-shadow: rgba(255, 255, 255, 0.2) 0px 8px 24px;\r\n  }\r\n`;\r\n\r\nexport const StyledOutlet = styled(Outlet)`\r\n  position: absolute;\r\n  top: 25%;\r\n  right: 2%;\r\n  width: 50%;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  background-color: #000000a4;\r\n  color: white;\r\n`;\r\n","import { Outlet, useParams } from \"react-router-dom\";\r\nimport { fetchDetails } from \"../../util/fetchDetails\";\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport { Details } from \"../../interfaces/details\";\r\nimport { Button, MovieInfo, MoviePoster } from \"./MovieDetails.styled\";\r\nimport { Heading } from \"../Home/Home.styled\";\r\n\r\nexport default function MovieDetails() {\r\n  const [details, setDetails] = useState({} as Details);\r\n  const { movieId: id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      fetchDetails(id).then(setDetails);\r\n    }\r\n  }, [id]);\r\n\r\n  if (!details.backdrop_path) {\r\n    return <h1>Sorry, no information about this one!ðŸ˜¯</h1>;\r\n  }\r\n  const {\r\n    backdrop_path,\r\n    original_title,\r\n    tagline,\r\n    budget,\r\n    genres,\r\n    overview,\r\n    release_date,\r\n    vote_average,\r\n  } = details;\r\n  let joinedGenres = \"no particular genre\";\r\n  if (genres) {\r\n    joinedGenres = genres.map((el) => el.name).join(\", \");\r\n  }\r\n  return (\r\n    <>\r\n      <Heading>{original_title}</Heading>\r\n      <MoviePoster\r\n        src={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}\r\n        alt={original_title}\r\n      />\r\n      <MoviePoster\r\n        src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}\r\n        alt={original_title}\r\n      />\r\n      <MovieInfo>\r\n        <h1>{tagline}</h1>\r\n        <p>{joinedGenres}</p>\r\n        <p>Budget: $ {budget}</p>\r\n        <p>Released: {release_date}</p>\r\n        <p>Average vote: {vote_average}</p>\r\n        <p>{overview}</p>\r\n        <Button to=\"cast\" state={{ id }}>\r\n          Cast\r\n        </Button>\r\n        <Button to=\"reviews\" state={{ id }}>\r\n          Reviews\r\n        </Button>\r\n      </MovieInfo>\r\n      <Suspense>\r\n        <Outlet />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Heading","styled","API_KEY","id","URL","axios","data","MoviePoster","MovieInfo","Button","NavLink","Outlet","MovieDetails","useState","details","setDetails","useParams","movieId","useEffect","fetchDetails","then","backdrop_path","original_title","tagline","budget","genres","overview","release_date","vote_average","joinedGenres","map","el","name","join","src","alt","to","state","Suspense"],"sourceRoot":""}