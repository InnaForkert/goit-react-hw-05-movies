{"version":3,"file":"static/js/361.75c1a0d3.chunk.js","mappings":"qLAEaA,E,OAAYC,GAAAA,EAAQ,4P,6HCA3BC,EAAU,mCAOf,8CALM,WAA4BC,GAAU,8EAEuB,OAD5DC,EAAG,iDAC4BD,EAAE,4BAAoBD,EAAO,mCAC/CG,EAAAA,EAAAA,IAAUD,GAAK,KAAD,EAAvB,OAAJE,EAAI,yBACHA,EAAKA,KAAKC,SAAO,4CACzB,sB,4BCPYC,EAASP,EAAAA,GAAAA,EAAQ,mEAKjBQ,EAAQR,EAAAA,GAAAA,WAAiB,wFAMzBS,EAAaT,EAAAA,GAAAA,IAAU,gP,SCV7B,SAASU,EAAO,GAAsD,IAAD,IAAnDL,KAAQM,EAAM,EAANA,OAAQC,EAAO,EAAPA,QACvC,OACE,UAACH,EAAU,YACT,SAACF,EAAM,UAAEI,KACT,SAACH,EAAK,UAAEI,MAGd,C,aCHe,SAASC,IACtB,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAM1B,OAJAC,EAAAA,EAAAA,YAAU,YHRL,SAA4B,GAAD,gCGS9BC,CAAaN,EAAMZ,IAAImB,KAAKH,EAC9B,GAAG,CAACJ,EAAMZ,MAGR,8BACGe,EAAQK,OAAS,EAChBL,EAAQM,KAAI,SAACC,GAAc,OAAK,SAACd,EAAM,CAACL,KAAMmB,GAASA,EAAGtB,GAAM,KAEhE,SAAC,IAAS,UAAC,mCAInB,C","sources":["pages/Reviews/Reviews.styled.tsx","util/fetchReviews.ts","components/Review/Review.styled.tsx","components/Review/Review.tsx","pages/Reviews/Reviews.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const NoReviews = styled.p`\r\n  position: relative;\r\n  z-index: 2;\r\n  margin-left: auto;\r\n  margin-right: 10%;\r\n  margin-top: 5%;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  font-size: 30px;\r\n  background-color: #000000a4;\r\n  color: white;\r\n  width: 270px;\r\n`;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"8522ceac590a3d887052607dd409b490\";\r\n\r\nexport async function fetchReviews(id: string) {\r\n  const URL = `\r\n  https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\r\n  const data = await axios.get(URL);\r\n  return data.data.results;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Author = styled.p`\r\n  font-size: 18px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const Quote = styled.blockquote`\r\n  font-style: italic;\r\n  font-size: 14px;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport const ReviewText = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 2;\r\n  margin-left: 50%;\r\n  margin-top: 10px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  background-color: #000000a4;\r\n  color: white;\r\n`;\r\n","import { ReviewType } from \"../../interfaces/review\";\r\nimport { Author, Quote, ReviewText } from \"./Review.styled\";\r\n\r\nexport function Review({ data: { author, content } }: { data: ReviewType }) {\r\n  return (\r\n    <ReviewText>\r\n      <Author>{author}</Author>\r\n      <Quote>{content}</Quote>\r\n    </ReviewText>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { fetchReviews } from \"../../util/fetchReviews\";\r\nimport { Review } from \"../../components/Review/Review\";\r\nimport { ReviewType } from \"../../interfaces/review\";\r\nimport { NoReviews } from \"./Reviews.styled\";\r\n\r\nexport default function Reviews() {\r\n  const { state } = useLocation();\r\n\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchReviews(state.id).then(setReviews);\r\n  }, [state.id]);\r\n\r\n  return (\r\n    <>\r\n      {reviews.length > 0 ? (\r\n        reviews.map((el: ReviewType) => <Review data={el} key={el.id} />)\r\n      ) : (\r\n        <NoReviews>No reviews found ðŸ™„</NoReviews>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["NoReviews","styled","API_KEY","id","URL","axios","data","results","Author","Quote","ReviewText","Review","author","content","Reviews","state","useLocation","useState","reviews","setReviews","useEffect","fetchReviews","then","length","map","el"],"sourceRoot":""}