{"version":3,"file":"static/js/537.3e67f2ca.chunk.js","mappings":"0MAGaA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAY,2ZAoB9BE,EAAaF,EAAAA,GAAAA,EAAQ,mE,kBCnB3B,SAASG,EAAU,GAItB,IAAD,IAHDC,MAASC,EAAc,EAAdA,eAAgBC,EAAW,EAAXA,YAAaC,EAAE,EAAFA,GAI9BC,GAAaC,EAAAA,EAAAA,MAAbD,SAER,OAAKF,GAKH,UAACP,EAAe,CACdW,GAAiB,MAAbF,EAAgB,kBAAcD,GAAE,UAAQA,GAC5CI,MAAO,CAAEC,KAAM,MAAO,WAEtB,gBACEC,IAAG,0CAAqCP,GACxCQ,IAAKT,KAEP,SAACH,EAAU,UAAEG,OAZR,IAeX,CCzBO,IAAMU,EAAef,EAAAA,GAAAA,IAAU,gICE/B,SAASgB,EAAO,GAAwC,IAAtCC,EAAS,EAATA,UACvB,OACE,SAACF,EAAY,UACVE,EAAUC,KAAI,SAACC,GAAS,OACvB,SAAChB,EAAS,CAACC,MAAOe,GAASA,EAAGZ,GAAM,KAI5C,C,qECVaa,E,OAAUpB,GAAAA,GAAS,0F,6GCAnBqB,E,OAAcrB,GAAAA,MAAY,0H,SCAhC,SAASsB,EAAY,GAMxB,IALFC,EAAQ,EAARA,SACAC,EAAK,EAALA,MAKA,OACE,SAACH,EAAW,CACVI,KAAK,OACLF,SAAU,SAACG,GAAC,OAAKH,EAASG,EAAE,EAC5BC,YAAY,cACZH,MAAOA,GAGb,C,+BChBMI,EAAU,mCAMf,8CAJM,WAA4BC,GAAa,8EACwD,OAAhGC,EAAG,4DAAwDF,EAAO,iCAAyBC,EAAK,wCACnFE,EAAAA,EAAAA,IAAUD,GAAK,KAAD,EAAvB,OAAJE,EAAI,yBACHA,EAAKA,KAAKC,SAAO,4CACzB,sB,qBCAc,SAASC,IAAc,IAAD,EACnC,GAA0CC,EAAAA,EAAAA,UAAS,IAAG,eAA/CC,EAAa,KAAEC,EAAgB,KACtC,GAAsCF,EAAAA,EAAAA,UAAS,IAAG,eAA3CG,EAAW,KAAEC,EAAc,KAClC,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAC9BC,EAAmC,QAA7B,EAAGF,EAAaG,IAAI,iBAAS,QAAI,GAiB7C,OAfAC,EAAAA,EAAAA,YAAU,WACJF,GDXD,SAA4B,GAAD,+BCY5BG,CAAaH,GAAQI,KAAKV,GAC1BW,YAAW,kBAAMT,EAAe,uCAA6B,GAAE,OAE/DF,EAAiB,IACjBE,EAAe,gCAEnB,GAAG,CAACI,KAQF,iCACE,SAACrB,EAAW,CAACC,SAPjB,SAAqBG,GACnB,IAAMuB,EAASvB,EAAEuB,OACjBP,EAAgBO,EAAOzB,MAAQ,CAAEmB,OAAQM,EAAOzB,OAAU,CAAC,EAC7D,EAIwCA,MAAOmB,IAC1CP,EAAcc,OAAS,GACtB,SAAClC,EAAA,EAAM,CAACC,UAAWmB,KAEnB,SAAC,IAAO,UAAEE,MAIlB,C","sources":["components/MovieCard/MovieCard.styled.tsx","components/MovieCard/MovieCard.tsx","components/Movies/Movies.styled.tsx","components/Movies/Movies.tsx","pages/Home/Home.styled.tsx","components/SearchField/SearchField.styled.tsx","components/SearchField/SearchField.tsx","util/searchMovies.ts","pages/SearchPage/SearchPage.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const MovieCardStyled = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 20%;\n  cursor: pointer;\n  transition-property: transform, box-shadow;\n  transition-duration: 250ms;\n  padding-bottom: 10px;\n  background-color: black;\n  color: white;\n  text-decoration: none;\n\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  }\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n  font-size: 16px;\n`;\n","import { MovieCardStyled, MovieTitle } from \"./MovieCard.styled\";\nimport { Movie } from \"../../interfaces/movie\";\nimport { useLocation } from \"react-router\";\n\nexport function MovieCard({\n  movie: { original_title, poster_path, id },\n}: {\n  movie: Movie;\n}) {\n  const { pathname } = useLocation();\n\n  if (!poster_path) {\n    return null;\n  }\n\n  return (\n    <MovieCardStyled\n      to={pathname === \"/\" ? `/movies/${id}` : `${id}`}\n      state={{ test: \"hi\" }}\n    >\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n        alt={original_title}\n      />\n      <MovieTitle>{original_title}</MovieTitle>\n    </MovieCardStyled>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const MovieLibrary = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  margin-bottom: 40px;\n`;\n","import { Movie } from \"../../interfaces/movie\";\nimport { MovieCard } from \"../MovieCard/MovieCard\";\nimport { MovieLibrary } from \"./Movies.styled\";\n\nexport function Movies({ movieList }: { movieList: Movie[] }) {\n  return (\n    <MovieLibrary>\n      {movieList.map((el: Movie) => (\n        <MovieCard movie={el} key={el.id} />\n      ))}\n    </MovieLibrary>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Heading = styled.h1`\n  font-size: 40px;\n  text-align: center;\n  margin-bottom: 25px;\n`;\n","import styled from \"styled-components\";\n\nexport const SearchInput = styled.input`\n  display: block;\n  width: 50%;\n  margin: 20px auto;\n  padding: 10px;\n  border-radius: 15px;\n`;\n","import { SearchInput } from \"./SearchField.styled\";\n\nexport function SearchField({\n  onChange,\n  value,\n}: {\n  onChange: (e: React.ChangeEvent) => void;\n  value: string;\n}) {\n  return (\n    <SearchInput\n      type=\"text\"\n      onChange={(e) => onChange(e)}\n      placeholder=\"Find a film\"\n      value={value}\n    />\n  );\n}\n","import axios from \"axios\";\nconst API_KEY = \"8522ceac590a3d887052607dd409b490\";\n\nexport async function searchMovies(query: string) {\n  const URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n  const data = await axios.get(URL);\n  return data.data.results;\n}\n","import { useState, useEffect } from \"react\";\nimport { Movies } from \"../../components/Movies/Movies\";\nimport { SearchField } from \"../../components/SearchField/SearchField\";\nimport { searchMovies } from \"../../util/searchMovies\";\nimport { Heading } from \"../Home/Home.styled\";\nimport { useSearchParams } from \"react-router-dom\";\n\nexport default function SearchPage() {\n  const [searchResults, setSearchResults] = useState([]);\n  const [headingText, setHeadingText] = useState(\"\");\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filter = searchParams.get(\"filter\") ?? \"\";\n\n  useEffect(() => {\n    if (filter) {\n      searchMovies(filter).then(setSearchResults);\n      setTimeout(() => setHeadingText(\"Nothing found, try againðŸ¤”\"), 100);\n    } else {\n      setSearchResults([]);\n      setHeadingText(\"Nothing here yetðŸ˜¥\");\n    }\n  }, [filter]);\n\n  function acceptInput(e: React.ChangeEvent) {\n    const target = e.target as HTMLInputElement;\n    setSearchParams(target.value ? { filter: target.value } : {});\n  }\n\n  return (\n    <>\n      <SearchField onChange={acceptInput} value={filter} />\n      {searchResults.length > 0 ? (\n        <Movies movieList={searchResults} />\n      ) : (\n        <Heading>{headingText}</Heading>\n      )}\n    </>\n  );\n}\n"],"names":["MovieCardStyled","styled","Link","MovieTitle","MovieCard","movie","original_title","poster_path","id","pathname","useLocation","to","state","test","src","alt","MovieLibrary","Movies","movieList","map","el","Heading","SearchInput","SearchField","onChange","value","type","e","placeholder","API_KEY","query","URL","axios","data","results","SearchPage","useState","searchResults","setSearchResults","headingText","setHeadingText","useSearchParams","searchParams","setSearchParams","filter","get","useEffect","searchMovies","then","setTimeout","target","length"],"sourceRoot":""}