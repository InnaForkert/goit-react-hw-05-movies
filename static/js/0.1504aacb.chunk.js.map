{"version":3,"file":"static/js/0.1504aacb.chunk.js","mappings":"mLAEaA,E,OAAUC,GAAAA,GAAS,0F,kHCA1BC,EAAU,mCAOf,8CALM,WAA4BC,GAAU,8EAEe,OADpDC,EAAG,iDAC4BD,EAAE,oBAAYD,EAAO,4BACvCG,EAAAA,EAAAA,IAAUD,GAAK,KAAD,EAAvB,OAAJE,EAAI,yBACHA,EAAKA,MAAI,4CACjB,sB,+CCNYC,EAAcN,EAAAA,GAAAA,IAAU,4EAMxBO,EAAYP,EAAAA,GAAAA,IAAU,mLAWtBQ,GAASR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAe,4Z,IAoBTA,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAc,oL,iBCjC3B,SAASW,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAa,eAA9CC,EAAO,KAAEC,EAAU,KACTZ,GAAOa,EAAAA,EAAAA,MAAhBC,QAQR,IANAC,EAAAA,EAAAA,YAAU,WACJf,GFRD,SAA4B,GAAD,+BES5BgB,CAAahB,GAAIiB,KAAKL,EAE1B,GAAG,CAACZ,KAECW,EAAQO,cACX,OAAO,wBAAI,sDAEb,IACEA,EAQEP,EARFO,cACAC,EAOER,EAPFQ,eACAC,EAMET,EANFS,QACAC,EAKEV,EALFU,OACAC,EAIEX,EAJFW,OACAC,EAGEZ,EAHFY,SACAC,EAEEb,EAFFa,aACAC,EACEd,EADFc,aAEEC,EAAe,sBAInB,OAHIJ,IACFI,EAAeJ,EAAOK,KAAI,SAACC,GAAE,OAAKA,EAAGC,IAAI,IAAEC,KAAK,QAGhD,iCACE,SAAC,IAAO,UAAEX,KACV,SAACf,EAAW,CACV2B,IAAG,0CAAqCb,GACxCc,IAAKb,KAEP,SAACf,EAAW,CACV2B,IAAG,8CAAyCb,GAC5Cc,IAAKb,KAEP,UAACd,EAAS,YACR,wBAAKe,KACL,uBAAIM,KACJ,yBAAG,aAAWL,MACd,yBAAG,aAAWG,MACd,yBAAG,iBAAeC,MAClB,uBAAIF,KACJ,SAACjB,EAAM,CAAC2B,GAAG,OAAOC,MAAO,CAAElC,GAAAA,GAAK,SAAC,UAGjC,SAACM,EAAM,CAAC2B,GAAG,UAAUC,MAAO,CAAElC,GAAAA,GAAK,SAAC,gBAItC,SAAC,EAAAmC,SAAQ,WACP,SAAC,KAAM,QAIf,C","sources":["pages/Home/Home.styled.tsx","util/fetchDetails.ts","pages/MovieDetails/MovieDetails.styled.tsx","pages/MovieDetails/MovieDetails.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Heading = styled.h1`\n  font-size: 40px;\n  text-align: center;\n  margin-bottom: 25px;\n`;\n","import axios from \"axios\";\n\nconst API_KEY = \"8522ceac590a3d887052607dd409b490\";\n\nexport async function fetchDetails(id: string) {\n  const URL = `\n  https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n  const data = await axios.get(URL);\n  return data.data;\n}\n","import { NavLink, Outlet } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const MoviePoster = styled.img`\n  position: absolute;\n  top: 20%;\n  width: 100%;\n`;\n\nexport const MovieInfo = styled.div`\n  position: absolute;\n  top: 25%;\n  left: 2%;\n  width: 40%;\n  padding: 15px;\n  border-radius: 10px;\n  background-color: #000000a4;\n  color: white;\n`;\n\nexport const Button = styled(NavLink)`\n  display: inline-block;\n  padding: 8px 20px;\n  margin: 10px;\n  color: black;\n  background-color: white;\n  border-radius: 10px;\n  text-decoration: none;\n  transition-property: color, background-color;\n  transition-duration: 250ms;\n\n  :hover,\n  :focus,\n  &.active {\n    color: white;\n    background-color: black;\n    box-shadow: rgba(255, 255, 255, 0.2) 0px 8px 24px;\n  }\n`;\n\nexport const StyledOutlet = styled(Outlet)`\n  position: absolute;\n  top: 25%;\n  right: 2%;\n  width: 50%;\n  padding: 15px;\n  border-radius: 10px;\n  background-color: #000000a4;\n  color: white;\n`;\n","import { Outlet, useParams } from \"react-router-dom\";\nimport { fetchDetails } from \"../../util/fetchDetails\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport { Details } from \"../../interfaces/details\";\nimport { Button, MovieInfo, MoviePoster } from \"./MovieDetails.styled\";\nimport { Heading } from \"../Home/Home.styled\";\n\nexport default function MovieDetails() {\n  const [details, setDetails] = useState({} as Details);\n  const { movieId: id } = useParams();\n\n  useEffect(() => {\n    if (id) {\n      fetchDetails(id).then(setDetails);\n    }\n  }, [id]);\n\n  if (!details.backdrop_path) {\n    return <h1>Sorry, no information about this one!ðŸ˜¯</h1>;\n  }\n  const {\n    backdrop_path,\n    original_title,\n    tagline,\n    budget,\n    genres,\n    overview,\n    release_date,\n    vote_average,\n  } = details;\n  let joinedGenres = \"no particular genre\";\n  if (genres) {\n    joinedGenres = genres.map((el) => el.name).join(\", \");\n  }\n  return (\n    <>\n      <Heading>{original_title}</Heading>\n      <MoviePoster\n        src={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}\n        alt={original_title}\n      />\n      <MoviePoster\n        src={`https://image.tmdb.org/t/p/original/${backdrop_path}`}\n        alt={original_title}\n      />\n      <MovieInfo>\n        <h1>{tagline}</h1>\n        <p>{joinedGenres}</p>\n        <p>Budget: $ {budget}</p>\n        <p>Released: {release_date}</p>\n        <p>Average vote: {vote_average}</p>\n        <p>{overview}</p>\n        <Button to=\"cast\" state={{ id }}>\n          Cast\n        </Button>\n        <Button to=\"reviews\" state={{ id }}>\n          Reviews\n        </Button>\n      </MovieInfo>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["Heading","styled","API_KEY","id","URL","axios","data","MoviePoster","MovieInfo","Button","NavLink","Outlet","MovieDetails","useState","details","setDetails","useParams","movieId","useEffect","fetchDetails","then","backdrop_path","original_title","tagline","budget","genres","overview","release_date","vote_average","joinedGenres","map","el","name","join","src","alt","to","state","Suspense"],"sourceRoot":""}